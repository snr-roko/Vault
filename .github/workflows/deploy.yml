name: deploy.yml
on:
  push:
    branches:
      - master

jobs:
  deploy-vault:
    runs-on: ubuntu-latest
    env:
      DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
      DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
      AWS_EC2_PRIVATE_KEY: ${{ secrets.AWS_EC2_SSH_PRIVATE_KEY }}
      AWS_EC2_PUBLIC_IP: ${{ secrets.AWS_EC2_PUBLIC_IP }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4.2.2
      - name: Configure JDK
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'
      - name: Run postgresql docker compose file
        run: docker compose up -d
      - name: Wait till docker psql is up
        run: |
          until docker compose exec -T db pg_isready -U vault-admin -d postgres; do
            echo "Waiting on database container"
            sleep 2
          done
      - name: Create database if not existing
        run: |
          docker compose exec -T db psql -U vault-admin -c "CREATE DATABASE vault_db;" || true
      - name: Generate Build Number
        run: |
          BUILD_NUMBER=$(date +'%d%m%Y%H%M%S')
          echo "BUILD_NUMBER=$BUILD_NUMBER" >> $GITHUB_ENV
          echo "Generated Build Number: $BUILD_NUMBER"
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ env.DOCKER_USERNAME }}
          password: ${{ env.DOCKER_PASSWORD }}
      - name: Maven Verify
        run: mvn -B -ntp clean verify jib:build -Ddocker.image.tag=$BUILD_NUMBER
      - name: Setup SSH Agent
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ env.AWS_EC2_PRIVATE_KEY }}
      - name: SSH into AWS EC2 Instance
        run: |
          ssh -o StrictHostKeyChecking=no ec2-user@${{ env.AWS_EC2_PUBLIC_IP }} << EOF
            ls
            pwd
            echo "snrroko" > test.txt
          EOF